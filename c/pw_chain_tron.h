/**
 * The file perform TRON wallet signature verification.
 *
 * The TRON wallet signature is generated by window.tronWeb.trx.sign().
 * tronWeb API is refer to
 * https://developers.tron.network/docs/tronlink-integration#signature
 *
 */

#include "pw_k1_helper.h"

#define TRON_SIGNATURE_SIZE 65

/**
 * @param message: transaction message digest, size is 32 bytes
 * @param eth_address: last 20 bytes keccak256 hash of pubkey, used to shield
 * the real pubkey. size is 20 bytes
 * @param lock_bytes: transaction signature in witness.lock, size is 65 bytes
 *
 */
int validate_tron(unsigned char* message, unsigned char* eth_address,
                  uint64_t lock_args_size, unsigned char* lock_bytes,
                  uint64_t lock_bytes_size) {
  if (lock_bytes_size != TRON_SIGNATURE_SIZE) {
    return ERROR_WITNESS_SIZE;
  }

  SHA3_CTX sha3_ctx;
  keccak_init(&sha3_ctx);
  /* ASCII code for tron prefix \x19TRON Signed Message:\n32, refer
   * https://github.com/tronprotocol/tips/issues/104 */
  unsigned char tron_prefix[24];
  tron_prefix[0] = 0x19;
  memcpy(tron_prefix + 1, "TRON Signed Message:\n32", 23);

  keccak_update(&sha3_ctx, tron_prefix, 24);
  keccak_update(&sha3_ctx, message, 32);
  keccak_final(&sha3_ctx, message);

  /* verify signature */
  return verify_signature(message, lock_bytes, eth_address);
}
